using System.Reactive.Subjects;
using DiscordManager.Core.Events;
using DiscordManager.Core.Interfaces;

namespace DiscordManager.Core.Services;

public class EventService : IEventService
{
    public Subject<ApplicationCommandCreatedEvent> ApplicationCommandCreated { get; } = new();
    public Subject<ApplicationCommandDeletedEvent> ApplicationCommandDeleted { get; } = new();
    public Subject<ApplicationCommandUpdatedEvent> ApplicationCommandUpdated { get; } = new();
    public Subject<AutoCompleteExecutedEvent> AutocompleteExecuted { get; } = new();
    public Subject<ButtonExecutedEvent> ButtonExecuted { get; } = new();
    public Subject<ChannelCreatedEvent> ChannelCreated { get; } = new();
    public Subject<ChannelDestroyedEvent> ChannelDestroyed { get; } = new();
    public Subject<ChannelUpdatedEvent> ChannelUpdated { get; } = new();
    public Subject<ConnectedEvent> Connected { get; } = new();
    public Subject<CurrentUserUpdatedEvent> CurrentUserUpdated { get; } = new();
    public Subject<DisconnectedEvent> Disconnected { get; } = new();
    public Subject<GuildAvailableEvent> GuildAvailable { get; } = new();
    public Subject<GuildJoinRequestDeletedEvent> GuildJoinRequestDeleted { get; } = new();
    public Subject<GuildMembersDownloadedEvent> GuildMembersDownloaded { get; } = new();
    public Subject<GuildMemberUpdatedEvent> GuildMemberUpdated { get; } = new();
    public Subject<GuildStickerCreatedEvent> GuildStickerCreated { get; } = new();
    public Subject<GuildStickerDeletedEvent> GuildStickerDeleted { get; } = new();
    public Subject<GuildStickerUpdatedEvent> GuildStickerUpdated { get; } = new();
    public Subject<GuildUnavailableEvent> GuildUnavailable { get; } = new();
    public Subject<GuildUpdatedEvent> GuildUpdated { get; } = new();
    public Subject<InteractionCreatedEvent> InteractionCreated { get; } = new();
    public Subject<InviteCreatedEvent> InviteCreated { get; } = new();
    public Subject<InviteDeletedEvent> InviteDeleted { get; } = new();
    public Subject<JoinedGuildEvent> JoinedGuild { get; } = new();
    public Subject<LatencyUpdatedEvent> LatencyUpdated { get; } = new();
    public Subject<LeftGuildEvent> LeftGuild { get; } = new();
    public Subject<LogEvent> Log { get; } = new();
    public Subject<LoggedInEvent> LoggedIn { get; } = new();
    public Subject<LoggedOutEvent> LoggedOut { get; } = new();
    public Subject<MessageCommandExecutedEvent> MessageCommandExecuted { get; } = new();
    public Subject<MessageDeletedEvent> MessageDeleted { get; } = new();
    public Subject<MessageReceivedEvent> MessageReceived { get; } = new();
    public Subject<MessagesBulkDeletedEvent> MessagesBulkDeleted { get; } = new();
    public Subject<MessageUpdatedEvent> MessageUpdated { get; } = new();
    public Subject<ModalSubmittedEvent> ModalSubmitted { get; } = new();
    public Subject<ReactionAddedEvent> ReactionAdded { get; } = new();
    public Subject<ReactionRemovedEvent> ReactionRemoved { get; } = new();
    public Subject<ReactionsClearedEvent> ReactionsCleared { get; } = new();
    public Subject<ReactionsRemovedForEmoteEvent> ReactionsRemovedForEmote { get; } = new();
    public Subject<RecipientAddedEvent> RecipientAdded { get; } = new();
    public Subject<RecipientRemovedEvent> RecipientRemoved { get; } = new();
    public Subject<RequestToSpeakEvent> RequestToSpeak { get; } = new();
    public Subject<RoleCreatedEvent> RoleCreated { get; } = new();
    public Subject<RoleDeletedEvent> RoleDeleted { get; } = new();
    public Subject<RoleUpdatedEvent> RoleUpdated { get; } = new();
    public Subject<SelectMenuExecutedEvent> SelectMenuExecuted { get; } = new();
    public Subject<SlashCommandExecutedEvent> SlashCommandExecuted { get; } = new();
    public Subject<SpeakerAddedEvent> SpeakerAdded { get; } = new();
    public Subject<SpeakerRemovedEvent> SpeakerRemoved { get; } = new();
    public Subject<StageEndedEvent> StageEnded { get; } = new();
    public Subject<StageStartedEvent> StageStarted { get; } = new();
    public Subject<StageUpdatedEvent> StageUpdated { get; } = new();
    public Subject<ThreadCreatedEvent> ThreadCreated { get; } = new();
    public Subject<ThreadDeletedEvent> ThreadDeleted { get; } = new();
    public Subject<ThreadMemberJoinedEvent> ThreadMemberJoined { get; } = new();
    public Subject<ThreadMemberLeftEvent> ThreadMemberLeft { get; } = new();
    public Subject<ThreadUpdatedEvent> ThreadUpdated { get; } = new();
    public Subject<UserBannedEvent> UserBanned { get; } = new();
    public Subject<UserCommandExecutedEvent> UserCommandExecuted { get; } = new();
    public Subject<UserIsTypingEvent> UserIsTyping { get; } = new();
    public Subject<UserJoinedEvent> UserJoined { get; } = new();
    public Subject<UserLeftEvent> UserLeft { get; } = new();
    public Subject<UserUnbannedEvent> UserUnbanned { get; } = new();
    public Subject<UserUpdatedEvent> UserUpdated { get; } = new();
    public Subject<UserVoiceStateUpdatedEvent> UserVoiceStateUpdated { get; } = new();
    public Subject<VoiceServerUpdatedEvent> VoiceServerUpdated { get; } = new();
}